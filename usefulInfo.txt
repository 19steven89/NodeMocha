used: npm install mocha@3.0.0 --save-dev
to use the Nodejs testing framework mocha in the app.

the --save-dev shows that the app only needs to use mocha for development
purposes only. i.e. mocha isnt required to run the app etc.

in the package.json file this is included:
"devDependencies": {
  "mocha": "^3.0.0"
}

to show its only for development dependencies. and it wont be installed when the app is deployed
in heroku, only for use locally.

altered the package.json file, to use:  "test": "mocha **/*.test.js"

this code will then register any file with the .test.js extension as a testing file

run: npm test in the terminal to run the unit tests!!

the --exec flag signals that the file to run may not be a node file.

changed the package.json file to include the script:  "test-watch": "nodemon --exec \"npm test\""

now to run the app, can use the following command, making it easier: npm run test-watch

installed: npm install expect@1.20.2 --save-dev
to use a unit test library which makes use of assertions in the utilities.test.js file

installed: npm i supertest@2.0.0 --save-dev
to let us test express apps.

also used the describe test suite method to give better test output
when the test is run.

used test spies to simulate a function using a unit test which is included in the npm expect module.
This is done in the spies directory

installed: npm install rewire@2.5.2 --save-dev
for use in making mock unit tests, in the app.test.js file
